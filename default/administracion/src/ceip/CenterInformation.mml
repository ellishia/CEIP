package ceip {

	["m23vtdw"]
	definition CenterInformation is form {
		label = "Información del Centro";

		["misj7ma"]
		field-text CenterCode {
			label = "Código del centro";
		}

		["m4t9gsq"]
		field-text CenterName {
			label = "Nombre del centro";
		}

		["msoxnng"]
		field-select OpeningHour {
			label = "Abierto desde";
			use {
				source = ref ceip.shared.Hours;
			}
		}

		["mkp9cma"]
		field-select ClosingHour {
			label = "Hasta";
			use {
				source = ref ceip.shared.Hours;
			}
		}

		["mibdbvg"]
		field-text AcademicHours {
			label = "Horas Lectivas";
		}

		["mtwrdpw"]
		field-section Contact {
			label = "Contacto";

			["mjar8hg"]
			field-text Address {
				label = "Dirección";
			}

			["md3_ecg"]
			field-number ZIPCode {
				label = "Código Postal";
			}

			["mkchv0w"]
			field-text Town {
				label = "Localidad";
			}

			["ma354tw"]
			field-number Telephone {
				is-multiple;
				label = "Teléfono";
			}

			["mjghwzq"]
			field-text Email {
				label = "Email";
			}

			["mgc7ktq"]
			field-text Web {
				label = "Página web";
			}
		}

		["msw_72a"]
		field-text InfluenceAreas {
			label = "Áreas de Influencia";
		}

		["msosdsa"]
		field-text LimitingAreas {
			label = "Áreas Limítrofes";
		}

		["mtzgfpa"]
		field-text RelatedPreeschools {
			is-multiple;
			label = "Centros de Infantil adscritos";
		}

		["mf24nmq"]
		field-text Specifics {
			is-multiple;
			label = "Especificidades";
		}

		["m08oxqg"]
		field-text ProximityCriteria {
			label = "Criterio de proximidad";
		}

		["m_wiiag"]
		field-text ComplementaryCriteria {
			label = "Criterio complementario";
		}

		["mfig1_w"]
		field-file RequiredDocs {
			is-multiple;
			label = "Documentos requiridos";
		}

		["mucf1zg"]
		field-select AcademicYear {
			label = "Año académico";
			use {
				source = ref ceip.shared.AcademicYears;
			}
		}
		onSaved() {
			GenerateHours(this);
		}

		function GenerateHours(Node centerInfo) {
			var centerI = centerInfo as ceip.CenterInformation;
			var horaslec = Integer:: getInteger(centerI.academicHours);
			var coleccion = ceip::Hours:: instance;
			if(this.getNote("Horas") == null) {
				this.addNote("Horas", centerI.academicHours);
				this.saveNotes;
				while(horaslec > 0) {
					var hora = ceip::hours::Hour:: createNew(coleccion);
					hora.^name = horaslec.toString() + "ª";
					hora.orden = horaslec;
					horaslec = horaslec - 1;
				}
			}
			else {
				var horas = this.getNote("Horas") as String;
				if(horas != centerI.academicHours) {
					var actual = Integer:: getInteger(centerI.academicHours);
					var antig = Integer:: getInteger(horas);
					//tengo mas horas lectivas ahora
					while(antig < actual) {
						var hora = ceip::hours::Hour:: createNew(coleccion);
						hora.^name = actual.toString() + "ª";
						hora.orden = actual;
						actual = actual - 1;
					}
					actual = Integer:: getInteger(centerI.academicHours);
					var nodos = coleccion.all;
					while(antig > actual) {
						var nodo = nodos.get(antig - 1);
						// quitar nodo
						antig = antig - 1;
					}
					this.addNote("Horas", centerI.academicHours);
					this.saveNotes;
				}
			}
		}

		["mlfxc3q"]
		view {
			label = "Ficha de Centro";
			show {
				field = ref CenterCode;
				field = ref CenterName;
				field = ref AcademicHours;
				field = ref Contact;
			}
		}

		["mfk_kpw"]
		view MatDatos {
			label = "Información relativa de matriculación";
			show {
				field = ref InfluenceAreas;
				field = ref LimitingAreas;
				field = ref RelatedPreeschools;
				field = ref Specifics;
				field = ref ProximityCriteria;
				field = ref ComplementaryCriteria;
				field = ref RequiredDocs;
			}
		}

		["mgfrgdg"]
		view View {
			is-widget;
			label = "Ficha de Centro";
			show {
				field = ref AcademicYear;
				field = ref CenterCode;
				field = ref CenterName;
				field = ref AcademicHours;
				field = ref Contact;
			}
		}

	}
}
